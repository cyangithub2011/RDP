name: RDP

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP Settings
        run: |
          # Enable Remote Desktop and disable Network Level Authentication (if needed)
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force

          # Allow RDP on firewall
          netsh advfirewall firewall delete rule name="RDP-Tailscale"
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389

          # Restart RDP service
          Restart-Service -Name TermService -Force

      - name: Create RDP User
        run: |
          $password = "P@ssw0rd123!"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          if (-not (Get-LocalUser -Name "RDP" -ErrorAction SilentlyContinue)) {
              New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
          } else {
              Set-LocalUser -Name "RDP" -Password $securePass
          }
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"

          echo "RDP_CREDS=User: RDP | Password: $password" >> $env:GITHUB_ENV

      - name: Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Establish Tailscale Connection
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              Start-Sleep -Seconds 5
              $retries++
          }
          if (-not $tsIP) {
              Write-Error "Tailscale IP not assigned. Exiting."
              exit 1
          }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: Install Dependencies (DirectX, Roblox, LDPlayer)
        run: |
          Write-Host "Installing dependencies..."

          # DirectX End-User Runtime Web Installer
          $dxUrl = "https://download.microsoft.com/download/9/3/1/931C2B79-B16A-45B9-9D7A-0F8E4F1A8F6F/dxwebsetup.exe"
          $dxPath = "$env:TEMP\dxwebsetup.exe"
          Invoke-WebRequest -Uri $dxUrl -OutFile $dxPath
          Start-Process -FilePath $dxPath -ArgumentList "/Q" -Wait
          Remove-Item $dxPath -Force

          # Roblox Player
          $rbxUrl = "https://setup.rbxcdn.com/RobloxPlayerLauncher.exe"
          $rbxPath = "$env:TEMP\RobloxPlayerLauncher.exe"
          Invoke-WebRequest -Uri $rbxUrl -OutFile $rbxPath
          Start-Process -FilePath $rbxPath -ArgumentList "-install" -Wait
          Remove-Item $rbxPath -Force

          # LDPlayer (Android emulator)
          $ldUrl = "https://cdn.ldmnq.com/download/en/LDPlayer9_en_9.0.53.exe"
          $ldPath = "$env:TEMP\LDPlayer.exe"
          Invoke-WebRequest -Uri $ldUrl -OutFile $ldPath
          Start-Process -FilePath $ldPath -ArgumentList "/silent" -Wait
          Remove-Item $ldPath -Force

          Write-Host "All apps installed!"

      - name: Verify RDP Accessibility
        run: |
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"
          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $testResult.TcpTestSucceeded) {
              Write-Error "TCP connection to RDP port 3389 failed"
              exit 1
          }
          Write-Host "TCP connectivity successful!"

      - name: Maintain Connection
        run: |
          Write-Host "`n=== RDP ACCESS ==="
          Write-Host "Address: $env:TAILSCALE_IP"
          Write-Host "Username: RDP"
          Write-Host "Password: P@ssw0rd123!"
          Write-Host "==================`n"
          while ($true) {
              Write-Host "[$(Get-Date)] RDP Active - Use Ctrl+C in workflow to terminate"
              Start-Sleep -Seconds 300
          }
